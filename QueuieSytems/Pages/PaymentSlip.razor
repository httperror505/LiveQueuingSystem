@page "/accounting/payment-slip"

@using System.Linq

<PageTitle>Payment Slip</PageTitle>

<div class="paymentBackground">
    <div class="card">
        <div class="header">
            <div class="row">
                <div class="col-3">
                    <img src="/images/logo.svg" alt="NCF Logo" class="logo" />
                </div>
                <div class="col-9 title-container">
                    <div class="">
                        <h3 class="schoolName">NAGA COLLEGE FOUNDATION, INC.</h3>
                        <h2 class="header-title">PAYMENT SLIP</h2>
                    </div>
                </div>
            </div>
        </div>
        <form>
            <div class="row inputFields">
                <div class="col-8">
                    <label for="studentID">Student ID:</label>
                    <input type="text" id="studentID" placeholder="Enter student ID" />
                </div>
                <div class="col-4">
                    <label for="date">Date:</label>
                    <input type="date" id="date" />
                </div>
            </div>

            <label for="studentName">Student Name:</label>
            <input type="text" id="studentName" placeholder="Enter name" />


            <table class="table payment-table">
                <thead>
                    <tr>
                        <th>Payment Details</th>
                        <th>Amount</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Input row -->
                    <tr>
                        <td>
                            <select id="paymentType" @bind="selectedPayment" class="input-field">
                                <option value="">-- Select --</option>
                                <option value="Tuition">Tuition</option>
                                <option value="Books">Books</option>
                                <option value="Special Exam">Special Exam</option>
                                <option value="Others">Others</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" id="amount" @bind="amount" class="input-field" placeholder="Enter amount" />
                        </td>
                        <td>
                            <button type="button" class="add-btn" @onclick="AddPayment">Add</button>
                        </td>
                    </tr>

                    <!--Automatically Remove all payment-->

                    <!-- Combined Payment List in One Cell -->
                    <tr>
                        <td colspan="3">
                            @if (payments.Any())
                            {
                                <div class="payment-list">
                                    @foreach (var item in payments)
                                    {
                                        <div class="payment-item">
                                            <span>@item.Key - @item.Value.ToString("F2")</span>
                                            <button type="button" class="delete-btn btn-success" @onclick="() => RemovePayment(item.Key)">❌</button>
                                        </div>
                                    }
                                </div>
                            }
                        </td>
                    </tr>

                    <!-- Total row -->
                    <tr>
                        <td></td>
                        <td class="text-end"><strong>Total</strong></td>
                        <td><strong>@TotalAmount.ToString("F2")</strong></td>
                    </tr>
                </tbody>
            </table>


            <button type="submit" class="btn btn-success">Submit</button>
        </form>
    </div>
</div>

@code {
    private string selectedPayment = "";
    private int amount;
    private IDictionary<string, int> payments = new Dictionary<string, int>
    {
        {"Tuition", 0},
        {"Books", 0},
        {"Special Exam", 0},
        {"Others", 0}
    };

    private int TotalAmount => payments.Values.Sum();

    private void AddPayment()
    {
        if (!string.IsNullOrWhiteSpace(selectedPayment) && amount > 0)
        {
            if (payments.ContainsKey(selectedPayment))
            {
                payments[selectedPayment] += amount;
            }
            else
            {
                // If the payment type doesn't exist in the dictionary, you can add it
                payments.Add(selectedPayment, amount);
            }

            selectedPayment = "";
            amount = 0;
        }
    }

    private void RemovePayment(string key)
    {
        if (payments.ContainsKey(key))
        {
            payments.Remove(key);
        }
    }

    private void RemoveAllPayment(string key)
	{
		payments.Clear();
	}
}
